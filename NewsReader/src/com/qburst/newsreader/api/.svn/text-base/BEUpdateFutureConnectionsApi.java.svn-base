package com.qburst.billexpress.api;

import java.util.Map;

import android.util.Log;

import com.qburst.billexpress.api.beans.request.BEUpdateFutureConnectionsRequestBean;
import com.qburst.billexpress.api.beans.response.BEUpdateFutureConnectionsResponseBean;
import com.qburst.billexpress.interfaces.BEApiListener;
import com.qburst.billexpress.interfaces.BEExceptionApiListener;
import com.qburst.billexpress.interfaces.BEUpdateFutureConnectionsAPIListener;
import com.qburst.billexpress.models.BEConnectionList;
/**
*
* API client end to retrieve UpdateFutureConnections information.
*  @author user
*/
public class BEUpdateFutureConnectionsApi extends BEBaseApi implements BEApiListener{

	
BEUpdateFutureConnectionsAPIListener _listener;
	
	public BEUpdateFutureConnectionsApi(BEUpdateFutureConnectionsAPIListener listener,BEExceptionApiListener exceptionListener) {
		this._excptnListener = exceptionListener;
		this._listener = listener;
	}
	
	public void updateFutureConnections(String sessionId, BEConnectionList connectionList )
	{
		BEUpdateFutureConnectionsRequestBean requestBean = new BEUpdateFutureConnectionsRequestBean();
		requestBean.setConnectionList(connectionList);

		if(_listener!=null){
			_listener.requestDidStart();
		}
		BEBaseWebService service = new BEBaseWebService(this, requestBean.toJsonString(), BEUpdateFutureConnectionsResponseBean.class,baseUrl());
		service.setAuthenticationParams("qburst", "qburst");
		service.execute(baseUrl());
	}
	@Override
	public String baseUrl(){
		return super.baseUrl()+"updateAllFutureConnectionStatus.php";
	}
	

	
	@Override
	public void onResponseReceived(Map<String, Object> response) {
		Log.i("RESPONSEdfgdfgd", response.toString());
		if(_listener!=null){
			_listener.requestDidFinish();
		}
		if (response.containsKey(BEApiConstants.kSuccessMsgKey)) {

			BEUpdateFutureConnectionsResponseBean respBean = (BEUpdateFutureConnectionsResponseBean) response
					.get(BEApiConstants.kSuccessMsgKey);

			if (respBean != null) {				
			
				if(_listener!=null){
					_listener.updatedFutureConnections();
				}
				
			}
		} else if (response.containsKey(BEApiConstants.kApiFailedMsgKey)) {

			if (response.containsKey("HttpStatus")) {

				
			}
		}
	}

	@Override
	public void onFailedToGetResponse(Map<String, Object> errorResponse) {
		
		if(_listener!=null){
			_listener.requestDidFinish();
		}
		detectErrorMessage(errorResponse);
	
	}
	

}
